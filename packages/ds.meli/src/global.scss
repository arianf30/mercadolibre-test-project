/*------------------------------------*\
    TABLE OF CONTENTS
\*------------------------------------*/

/**
 *
 * FOUNDATIONS................................................
 * BASE.......................................................
 */

/*=============================================
=                   Foundations               =
=============================================*/

@import "foundation/all";

/*==============================================
=                   Base                      =
=============================================*/

@import "base/reset";
@import "base/root";

body {
  font-family: $body-font-family;
  font-size: $body-font-size;
  font-weight: $body-font-weight;
  background: $grey-extra-light
}

button, a, input, select, textarea, ol, li {
  &:focus-visible {
    box-shadow: 0 0 0 2px $white, 0 0 0 3px $blue,
      0 0 0 5px rgba(65, 137, 230, 0.3);
    box-shadow: 0 0 0 2px $white, 0 0 0 3px $blue,
      0 0 0 5px rgba(65, 137, 230, 0.3);
    box-shadow: 0 0 0 2px $white, 0 0 0 3px $blue,
      0 0 0 5px rgba(65, 137, 230, 0.3);
    outline: none;
  }
}


/*=============================================
=                    Grid                     =
=============================================*/

$grid-columns: 12;
$grid-gaps: (
  "0": 0,
  "1": 10px,
  "2": 20px,
  "3": 30px,
);
$layout-values: flex-start, flex-end, center, space-between, space-around;

// base layout classes
.container {
  box-sizing: border-box;
  margin: 0 auto;
  max-width: 1440px;
  padding: 0 20px;
  width: 100%;
}

.row {
  display: flex;
  flex-flow: row wrap;
}

// grid gaps
@each $key, $val in $grid-gaps {
  .gap-#{$key} > * {
    padding: $val;
  }
  .gap-#{$key} {
    margin-left: -$val;
    margin-right: -$val;
  }
}

// justify content classes
@each $val in $layout-values {
  .justify-#{$val} {
    justify-content: $val;
  }
}

// col classes
@include mobile {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xs {
      box-sizing: border-box;
      flex-grow: 0;
      width: (100% / $grid-columns) * $i;
    }
  }
}
@include tablet {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: (100% / $grid-columns) * $i;
    }
  }
}
@include laptop {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: (100% / $grid-columns) * $i;
    }
  }
}
@include desktop {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: (100% / $grid-columns) * $i;
    }
  }
}

@include bigDesktop {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xxl {
      box-sizing: border-box;
      flex-grow: 0;
      width: (100% / $grid-columns) * $i;
    }
  }
}




